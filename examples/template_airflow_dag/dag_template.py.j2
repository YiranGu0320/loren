{% for name, conf in dags.items() %}
=>{{ name }}.py
from datetime import timedelta
from airflow import DAG
from airflow.operators.sql import BranchSQLOperator
from airflow.utils.dates import days_ago


dag = DAG(
    dag_id="{{ name }}",
    schedule_interval="{{ conf.schedule_interval }}",
    start_date=days_ago({{ conf.start_days_ago }}),
    dagrun_timeout={{ conf.dagrun_timeout }},
    tags=['example', 'example2'],
    params={"example_key": "example_value"},
)

{% for sql_database, tables in tasks.items() %}
{%- for table_name, task in tables.items() if task.dag == name %}
{{sql_database}}_{{ table_name }}_task = BranchSQLOperator(
    task_id='{{ sql_database }}.{{ table_name }}',
    dag=dag,
    sql='queries/{{ sql_database }}/{{ table_name }}.sql',
    database='{{sql_database}}'
)
{% endfor -%}
{% endfor %}
{% for sql_database, tables in tasks.items() %}
{%- for table_name, task in tables.items() if task.dag == name %}
{%- for dependency in task.depends_on %}
{{ dependency.replace(".", "_") }}_task >> {{sql_database}}_{{ table_name }}_task
{% endfor -%}
{% endfor -%}
{% endfor %}
if __name__ == "__main__":
    dag.cli()
{% endfor %}
{% for sql_database, tables in tasks.items() %}
{% for table_name, task in tables.items() %}
=>queries/{{ sql_database }}/{{ table_name }}.sql
CREATE TABLE {{ table_name }}
  AS (
{{ task.query | indent(8, True)}}
  )
{% endfor %}
{% endfor %}
